import Head from "next/head";
// import Image from "next/image";
// import Link from "next/link";
import Generator from "../components/Generator";
import Studies from "../components/Studies";
import CustomCreatives from "../components/CustomCreatives";
import CreativeBusinessRules from "../components/CreativeBusinessRules";
import { BrowserRouter, Routes, Route, Navigate, NavLink } from 'react-router-dom';
import styles from "../styles/Home.module.css";
import Nav from "../components/Nav";
import { useState, useEffect, Component } from "react";
import UUIDV4 from "../helpers/helpers";
import { Fragment } from "react";
import AddStudyRow from "../components/AddStudyRow";

<<<<<<< HEAD
function App() {

  return (
    <Fragment>
      <Head>
        <title>GumGum SLA Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link hre="~/pier-design-system/dist/styles.css" />
      </Head>
      
      <BrowserRouter>
        <div className={styles.container}>
          

          <div className="nav-section">
            <Nav/>

          </div>
          <div className="sla-content">
              <Routes>
                <Route path="/generator" element={<Generator />} />
                <Route path="/studies" element={<Studies />} />
                <Route path="/custom-creatives" element={<CustomCreatives />} />
                <Route path="/creative-rules" element={<CreativeBusinessRules />} />
              </Routes>
          </div>
        </div>
      </BrowserRouter>
=======
import {
  Card,
  Heading,
  Section,
  BodyText,
  HR,
  Button,
  IconButton,
  Tooltip,
  Accordion,
  InputToggle,
  InputCheckbox,
} from "pier-design-system";

let setDebounce;
let unitSchema = {
  key: null,
  unitType: "In-screen",
  versionCount: 0,
  customUnit: null,
  customOn: false,
  isExpedited: false,
  isCustomizable: true,
  floorCPM: 0,
  openCPM: 0,
  turnaroundTime: 0,
  minSpend: 0,
  customFeatures: [],
};

let studySchema = {
  key: null,
  title: "Brand Lift",
  studyPartners: [],
};

function App() {
  const [accordionOpen, setAccordion] = useState(true);
  const [campaignText, setcampaignText] = useState("Campaign Details");
  const [bodyText, setBodyText] = useState("Fill in required campaign info");
  const [creativeText, setCreativeText] = useState("Creative Plan");
  const [campaign, setCampaign] = useState({
    clientName: undefined,
    campaignName: undefined,
    campaignBudget: 0,
    unitConfig: [],
    studyConfig: [],
  });

  const setCustomConfig = (key, value, field) => {
    const unit = getUnitConfig(key);
    unit[field] = value;
    campaign.unitConfig[getUnitIndex(key)] = unit;
    updateCampaign(campaign);
  };
  const setCampaignInputs = (value, field) => {
    clearTimeout(setDebounce);
    campaign[field] = value;
    setDebounce = setTimeout(() => {
      updateCampaign(campaign);
    }, 250);
  };
  const getUnitConfig = (key) => {
    const unitConfig = campaign.unitConfig;
    const index = getUnitIndex(key);
    return unitConfig[index];
  };

  const getStudyConfig = (key) => {
    const unitConfig = campaign.studyConfig;
    const index = getUnitIndex(key);
    return studyConfig[index];
  };
  const setStudyConfig = (key, value, field) => {
    const study = getStudyConfig(key);
    study[field] = value;
    campaign.StudyConfig[getUnitIndex(key)] = study;
    updateCampaign(campaign);
  };
  const getStudyIndex = (key) => {
    const studyConfig = campaign.studyConfig;
    return studyConfig.map((obj) => obj.key).indexOf(key);
  };

  const removeStudyConfig = (key) => {
    const index = getStudyIndex(key);
    campaign.studyConfig.splice(index, 1);
    updateCampaign(campaign);
  };

  const createStudyConfig = () => {
    const newStudy = Object.assign({}, unitSchema);
    newStudy.key = UUIDV4();
    campaign.studyConfig.push(newStudy);
    updateCampaign(campaign);
  };

  const getUnitIndex = (key) => {
    const unitConfig = campaign.unitConfig;
    return unitConfig.map((obj) => obj.key).indexOf(key);
  };

  const setUnitConfig = (key, value, field) => {
    const unit = getUnitConfig(key);
    unit[field] = value;
    campaign.unitConfig[getUnitIndex(key)] = unit;
    updateCampaign(campaign);
  };
  const removeUnitConfig = (key) => {
    const index = getUnitIndex(key);
    campaign.unitConfig.splice(index, 1);
    updateCampaign(campaign);
  };
  const createUnitConfig = () => {
    const newUnit = Object.assign({}, unitSchema);
    newUnit.key = UUIDV4();
    campaign.unitConfig.push(newUnit);
    updateCampaign(campaign);
  };
  const deleteAllUnits = () => {
    campaign.unitConfig = [];
    updateCampaign(campaign);
  };
  const updateCampaign = (updatedCampaign) => {
    console.log("update");
    console.log(updatedCampaign);
    setCampaign({ ...updatedCampaign });
  };
  const toggleAccordion = () => {
    setAccordion(!accordionOpen);
  };
  const handleToggle = (event, field) => {
    if (field === "isExpedited") {
      for (let i = 0; i < campaign.unitConfig.length; i++) {
        if (event.target.checked === true) {
          setUnitConfig(campaign.unitConfig[i].key, true, "isExpedited");
        } else {
          setUnitConfig(campaign.unitConfig[i].key, false, "isExpedited");
        }
      }
    }
  };
  const accordionClass = accordionOpen
    ? "pier-accordion pier-accordion--open pier-accordion--card"
    : "pier-accordion pier-accordion--card";

  return (
    <Fragment>
      <div className={styles.container}>
        <div
          className="-d-flex"
          style={{ width: "100vw", height: "100vh", position: "fixed" }}
        ></div>

        <Head>
          <title>GumGum SLA Generator</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link hre="~/pier-design-system/dist/styles.css" />
        </Head>

        <main style={{ maxWidth: "1200px", margin: "0px auto", width: "100%" }}>
          <Section padding="lg"></Section>
          <Heading className="main-heading">
            Rate, Spend, and SLA Generator
          </Heading>
          <Link href="/CustomCreatives">Custom Creatives</Link> <br></br>
          <Link href="/CreativeBusinessRules">
            Creative Business Rules
          </Link>{" "}
          <br></br>
          <Link href="/Studies">Studies/DMPs</Link>
          <Card className="card">
            <div className={accordionClass}>
              <div className="pier-accordion__title" onClick={toggleAccordion}>
                <h1 className="pier-accordion__heading">
                  <span className="pier-accordion__icon fas fa-cog"></span>
                  Configure Campaign
                </h1>
              </div>
              <div className="pier-accordion__content">
                <div className="campaign-card-style">
                  <div className="campaign-section-wrapper">
                    <SubHeading text={campaignText} body={bodyText} />

                    <Section padding="xs">
                      {" "}
                      <InputToggle
                        size="sm"
                        disabled={false}
                        dark={false}
                        error={false}
                        className="-m-r-7"
                      >
                        Client Facing
                      </InputToggle>
                    </Section>

                    <CampaignInputs
                      campaign={campaign}
                      changeHandler={setCampaignInputs}
                    />

                    <HR />

                    <Section padding="xs">
                      <div className="-d-flex -justify-content-between">
                        <InputToggle
                          size="sm"
                          disabled={false}
                          dark={false}
                          error={false}
                          className="-m-r-7"
                        >
                          Programmatic
                        </InputToggle>

                        <InputToggle
                          size="sm"
                          disabled={false}
                          dark={false}
                          error={false}
                          className="-m-r-5"
                          onChange={(event) => {
                            handleToggle(event, "isExpedited");
                          }}
                        >
                          Expedited
                        </InputToggle>
                      </div>
                    </Section>
                  </div>
                  <div className="plan-section-wrapper">
                    <div className="creative-plan">
                      <div className="-m-b-6">
                        <SubHeading
                          text={creativeText}
                          body={"Add Creatives to Campaign"}
                        />
                      </div>
                    </div>

                    {campaign.unitConfig.map((config, index) => (
                      <CreativeRow
                        deleteHandler={removeUnitConfig}
                        changeHandler={setUnitConfig}
                        key={config.key}
                        index={config.key}
                        config={config}
                      />
                    ))}

                    <HR />

                    <div className="buttons-section">
                      <Tooltip text="Add creative">
                        <IconButton
                          onClick={createUnitConfig}
                          className="plus-button"
                          title="Button"
                          icon="far fa-plus"
                          size="sm"
                          disabled={false}
                          dark={false}
                          pill={false}
                          hero={true}
                        />
                      </Tooltip>
                      <Button
                        className="clear-all-button"
                        onClick={deleteAllUnits}
                        title="Button"
                        size="sm"
                        theme="secondary"
                        disabled={false}
                        dark={false}
                        pill={false}
                      >
                        Clear all
                      </Button>
                    </div>
                    <div className="-m-t-11">
                      <Accordion
                        title="Add Studies and DMP's"
                        startOpen={false}
                        inCard={true}
                        icon="fas fa-chart-line"
                        disabled={false}
                        dark={false}
                        size="sm"
                      >
                        <Section>
                          <div className="-d-flex -justify-content-between ">
                            <BodyText size="lg" style={{ fontWeight: "bold" }}>
                              Additional Studies
                              <BodyText size="xs" style={{ color: "#A5B2B8" }}>
                                Optional field to add studies to the campaign
                              </BodyText>
                            </BodyText>
                            <InputCheckbox
                              size="sm"
                              disabled={false}
                              dark={false}
                              error={false}
                              partial={false}
                            >
                              Add Study
                            </InputCheckbox>
                          </div>
                          <AddStudyRow />
                          <HR />
                          <div className="-d-flex -justify-content-between  -m-t-7">
                            <BodyText size="lg" style={{ fontWeight: "bold" }}>
                              Additional DMPs
                              <BodyText size="xs" style={{ color: "#A5B2B8" }}>
                                Optional field to add DMPs to the campaign
                              </BodyText>
                            </BodyText>
                            <InputCheckbox
                              size="sm"
                              disabled={false}
                              dark={false}
                              error={false}
                              partial={false}
                            >
                              Add DMP
                            </InputCheckbox>
                          </div>
                        </Section>
                        <HR />
                      </Accordion>
                    </div>
                    <div className="-m-t-6 -float-right">
                      <Button
                        title="Button"
                        icon="fas fa-cog"
                        disabled={false}
                        dark={false}
                        pill={false}
                        size="sm"
                      >
                        Generate
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Card>
          <div id="capture">
            <Card style={{ padding: "2rem" }}>
              <Section size="xl">
                {" "}
                <div className="-d-flex">
                  {" "}
                  <CampaignOutput campaign={campaign} />
                  <DesignCard campaign={campaign} />
                  <CesCard campaign={campaign} />
                </div>
              </Section>

              <div className="spend-sla-section">
                <SpendCard campaign={campaign} />
              </div>
            </Card>
          </div>
          <RateBreakdownCard campaign={campaign} />
        </main>
      </div>
>>>>>>> feature/creative-business-rules
    </Fragment>
  );
}

export default App;
